// htmltitle is required.  It will be displayed in the title bar of browser.
htmltitle=

// projecttitle is required.  It will be displayed as a title in the generate page.
// This will be sent as the greeting if there is no Greeting.txt file.
projecttitle=

// csslink is optional and is the name of the cascade style sheet used by the
// project for cascade style sheets in the HTML.  A demo prpnet.css is supplied
// in the server folder of the distribution.
csslink=

// sortlink is optional and is the name of the java script used by the project
// to support sortable HTML tables.  A demo sortable.js is supplied in the server
// folder of the distribution.
sortlink=

// projectname= is an optional field.  Fill in the name of the project as found
// on the Prime Pages.  This will be included in any e-mails sent out by the server.
projectname=

// email= is a REQUIRED field.  This will be the email ID in the FROM line
// of any emails sent out.  This ID will also receive a copy of any emails
// sent out.  To send emails to additional people, use the destid parameter
email=

// port= is the port that the server will listen on.  Typically 7101 is used.
port=

// servertype= indicates the type of numbers on the server.  For a server of
// type Sierpinski/Riesel the server will do some additional processing when
// a PRP is found.  It will automatically remove (based upon savesrprpaction)
// all other candidates for the same k/b/c as the number that is PRP.
// This will also affect how stats are produced.  Here is a list of supported
// server types:
//   1 - Sierpinski/Riesel
//   2 - Generalized Cullen/Woodall
//   3 - Fixed b, k, and c, grouped by n
//   4 - Fixed b, n, and c, grouped by k
//   5 - Primorial
//   6 - Factorial
//   7 - Twin (k*b^n+/-1, subtype of Fixed b, k, c)
//   8 - Generalized Fermat Number (GFN)
//   9 - Sophie/Germain
//  10 - x^y+y^x and x^y-y^x
//  11 - Multifactorial
//  12 - Wagstaff (2^n+1)/3
//  21 - Wieferich
//  22 - Wilson (not supported yet)
//  23 - Wall-Sun-Sun (aka Fibonacci-Wieferich)
//  24 - Wolstenholme (not supported yet)
//  31 - Cyclotomic (aka P.I.E.S.)
//  32 - Carol/Kynea ((2^n+/-1)^2-2)
//  99 - Generic (pfgw only)
servertype=

// usellroverpfgw=1 tells the server that clients to use LLR instead of PFGW
// for bases that are not powers of 2 if both are available to the client.
// By default the client will only use LLR for bases that are powers of 2.
// Note that setting this could lead to triple checks if some clients use LLR
// and others user PFGW or phrot and the residues migth not match as LLR could
// choose a different base then PFGW/phrot for its test.
usellroverpfgw=

// The password is required if using the prpadmin tool
adminpassword=

// This is required if the e-mail server requires SMTP authentication.  It is
// the password to the aforementioned e-mail account.
emailpassword=

// SMTP server and port to use when sending PRP found emails
// Leave smtpserver commented or empty to disable mail
// Example:  smtp.prpnet.com:25
smtpserver=

// destid= is used only when one or more people other than the above email are
// to receive notification of a new factor.  Put each email ID on a separate 
// line.  Up to 10 are accepted.
destid=

// onekperinstance= only applies to Sierpinski/Riesel type servers
// By setting this to 1, it will ensure that each instance of the client will
// work on a k/b/c and that other candidates for the same k/b/c will not be
// given to another instance of the client.  Setting this to 1 will also set
// the sortoption to k,n,b,c which cannot be overridden.
onekperinstance=0

// specialthreshhold= applies only to the Wieferich, Wilson, Wall-Sun-Sun, and
// Wolstenholme searches.  It is sent to the client to help the client identify
// special instances of those searches.
specialthreshhold=100

// sortoption= tells the server how to hand out candidates for testing.  This is
// a comma delimited list of sort criteria that will be used if the server
// configuration allow for it.  These are the available sort options: 
//    a - age, older candidates have higher priority
//    l - length, short candidates have higher priority
//    k - k, lower k have higher priority
//    b - b, lower b have higher priority
//    n - n, lower n have higher priority
//    c - c, lower c have higher priority
//    m - candidate name
// Exceptions:  servertype=99 (Generic) uses "a,l,m"
//              servertype=8 (GFN) uses "b,n"
//              onekperinstance=1 uses "k,b,c,n"
//              double-checking uses "l,a"
sortoption=l,a

// doublecheck= indicates if the server needs two tests with the same residue for
// all candidate numbers.  The default is 0.
doublecheck=0

// doublechecker= indicates who can double-check the number
//   1 - a different email and machine (default)
//   2 - a different email
//   3 - a different machine
//   4 - anybody
doublechecker=1

// maxworkunits= is the maximum number of workunits that a client can
// request at a time.  If a client requests too many the chances that
// some workunits timeout is greater.  The default is 1.
maxworkunits=1000

// maxclients= tells the server how many clients can concurrently connect
// to the server.  The default is 100.
maxclients=50

// unhideprimehours= is the number of hours to wait before any primes/PRPs
// will be available on the user_primes.html webpage.  When set to 0 (the
// default), it will be show immediately.
unhideprimehours=0

// Size limit in bytes for the prpclient.log file.
//    0 - no limit
//   -1 - no log
loglimit=0

// localtimelog= tells the server if the local timezone of the server should be
// used in logging.  The default is localtimelog=1, i.e. using local time zone.
// localtimelog=2 will tell the server to not append a timezone to the timestamp.
localtimelog=1

// localtimehtml= tells the server if the local timezone of the server should
// be used in HTML.  The default is localtimehtml=1, i.e. using local time zone
localtimehtml=1

// serverstatssummaryonly= tells the server to only show the summary line(s) on
// the server_stats.html page.  This is useful when the server would generate
// a lot of html due to there being many rows of stats to display.
serverstatssummaryonly=0

// Set the debug level for the server
//    0 - no debug messages
//    1 - all debug messages
//    2 - output debug messages from socket communication
//    3 - output debug messages from work selection
//    4 - output debug messages from database communication
debuglevel=0

// Whether to shorten the lines written to the test log and console
//    0 - long (default), e.g. Email: soylentgreen@yahoo.com  User: sg  Machine: quadcore  Instance: 1  
//    1 - short, soylentgreen@yahoo.com/sg/quadcore/1
brieftestlog=0

// Whether or not to echo "test sent"/"test received" messages to console
//    0 - no echo
//    1 - echo (default)
echotest=1

// Whether or not work units can expire
//    0 - expire based upon prpserver.delay settings
//    1 - never expire
noexpire=0

// Whether or not new work can be sent to clients
//    0 - send new work
//    1 - do not send new work
nonewwork=0

// When to send an e-mail when work is running low.  The e-mail
// will be sent once a day around midnight (local time).
//    0 - no notification
//    x - send an e-mail each day if less than x days of work remaining
notifylowwork=0